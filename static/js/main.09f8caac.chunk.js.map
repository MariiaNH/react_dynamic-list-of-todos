{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectToDo","selectedTodoID","className","map","todo","id","title","completed","isSelected","classNames","type","onClick","TodoFilter","filter","selectFilter","onQueryChange","search","value","onChange","target","All","Active","Completed","placeholder","style","pointerEvents","Boolean","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedToDo","unselectToDo","useState","isLoaded","setIsLoaded","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","initialTodos","setInitialTodos","setTodos","setFilter","setSearch","selectedTodo","setSelectedTodo","todosFromServer","prevTodos","toLowerCase","includes","handleToDoSelection","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f8caac.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectToDo: (todo: Todo | null) => void,\n  selectedTodoID: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectToDo,\n  selectedTodoID,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        const isSelected = selectedTodoID === id;\n\n        return (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectToDo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      {\n                        'fa-eye': !isSelected,\n                        'fa-eye-slash': isSelected,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter,\n  selectFilter: (value: Filter) => void,\n  search: string,\n  onQueryChange: (value: string) => void,\n};\nexport const TodoFilter: FC<Props> = ({\n  filter,\n  selectFilter,\n  onQueryChange,\n  search,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={({ target }) => selectFilter(target.value as Filter)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={search}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={({ target }) => onQueryChange(target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {Boolean(search) && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedToDo: Todo,\n  unselectToDo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedToDo, unselectToDo }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedToDo;\n\n  useEffect(() => {\n    getUser(userId).then((userFromServer) => {\n      setUser(userFromServer);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoaded\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => unselectToDo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className=\"has-text-danger\">\n                  {completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [search, setSearch] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      setInitialTodos(todosFromServer);\n      setTodos(todosFromServer);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case Filter.All:\n        setTodos(initialTodos);\n        break;\n\n      case Filter.Active:\n        setTodos([...initialTodos].filter(todo => !todo.completed));\n\n        break;\n\n      case Filter.Completed:\n        setTodos([...initialTodos].filter(todo => todo.completed));\n\n        break;\n\n      default:\n        break;\n    }\n\n    setTodos(\n      prevTodos => prevTodos.filter(\n        todo => todo.title.toLowerCase().includes(search.toLowerCase()),\n      ),\n    );\n  }, [filter, search]);\n\n  const handleFilterSelect = (value: Filter) => {\n    setFilter(value);\n  };\n\n  const handleQueryChange = (value: string) => {\n    setSearch(value);\n  };\n\n  const handleToDoSelection = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                selectFilter={handleFilterSelect}\n                search={search}\n                onQueryChange={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n              {todos.length > 0 && (\n                <TodoList\n                  todos={todos}\n                  selectToDo={handleToDoSelection}\n                  selectedTodoID={selectedTodo?.id || 0}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== null\n      && (\n        <TodoModal\n          selectedToDo={selectedTodo}\n          unselectToDo={handleToDoSelection}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}